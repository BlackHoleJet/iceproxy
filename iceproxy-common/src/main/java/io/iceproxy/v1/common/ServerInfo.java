// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package io.iceproxy.v1.common;

public class ServerInfo implements java.lang.Cloneable, java.io.Serializable
{
    public int status;

    public int id;

    public int payload;

    public ServerInfo()
    {
    }

    public ServerInfo(int status, int id, int payload)
    {
        this.status = status;
        this.id = id;
        this.payload = payload;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ServerInfo _r = null;
        if(rhs instanceof ServerInfo)
        {
            _r = (ServerInfo)rhs;
        }

        if(_r != null)
        {
            if(status != _r.status)
            {
                return false;
            }
            if(id != _r.id)
            {
                return false;
            }
            if(payload != _r.payload)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::common::ServerInfo");
        __h = IceInternal.HashUtil.hashAdd(__h, status);
        __h = IceInternal.HashUtil.hashAdd(__h, id);
        __h = IceInternal.HashUtil.hashAdd(__h, payload);
        return __h;
    }

    public ServerInfo
    clone()
    {
        ServerInfo c = null;
        try
        {
            c = (ServerInfo)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(status);
        __os.writeInt(id);
        __os.writeInt(payload);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        status = __is.readInt();
        id = __is.readInt();
        payload = __is.readInt();
    }

    static public void
    __write(IceInternal.BasicStream __os, ServerInfo __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public ServerInfo
    __read(IceInternal.BasicStream __is, ServerInfo __v)
    {
        if(__v == null)
        {
             __v = new ServerInfo();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final ServerInfo __nullMarshalValue = new ServerInfo();

    public static final long serialVersionUID = -136084547L;
}
